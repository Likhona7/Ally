(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'chai', 'enzyme', 'chai-enzyme', './DropDownGroup'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('chai'), require('enzyme'), require('chai-enzyme'), require('./DropDownGroup'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.chai, global.enzyme, global.chaiEnzyme, global.DropDownGroup);
    global.DropDownGroupTest = mod.exports;
  }
})(this, function (_react, _chai, _enzyme, _chaiEnzyme, _DropDownGroup) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _chai2 = _interopRequireDefault(_chai);

  var _chaiEnzyme2 = _interopRequireDefault(_chaiEnzyme);

  var _DropDownGroup2 = _interopRequireDefault(_DropDownGroup);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  _chai2.default.use((0, _chaiEnzyme2.default)());

  describe('Dropdown Component', function () {
    it('should render when no options are presented', function () {
      var actions = {
        onClick: function onClick() {},
        onFocus: function onFocus() {},
        onChange: function onChange() {}
      };
      var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_DropDownGroup2.default, { onChange: actions.onChange, onFocus: actions.onFocus }));
      var dropdown = wrapper.find('.dropdown');
      (0, _chai.expect)(dropdown.childAt(0)).to.have.className('btn');
      (0, _chai.expect)(dropdown.childAt(0)).to.have.className('dropdown__toggle');
      (0, _chai.expect)(dropdown.childAt(1)).to.have.className('dropdown__options');
      (0, _chai.expect)(wrapper.find('.dropdown__title')).to.have.text('Please select a value');
    });
  });

  describe('Dropdown Actions', function () {
    var actions = {
      onClick: function onClick() {},
      onFocus: function onFocus() {},
      onChange: function onChange() {}
    };
    var dropdownItems = [{
      label: 'Currency',
      items: [{ value: 'GBP', label: 'Pounds', disabled: true }, { value: 'EUR', label: 'Euro' }]
    }, {
      label: 'Colours',
      items: [{ value: 'RED', label: 'red', disabled: true }, { value: 'GREEN', label: 'green' }, { value: 'BLUE', label: 'blue' }, { value: 'ORANGE', label: 'orange' }]
    }, {
      label: 'Cars',
      items: [{ value: 'MERC', label: 'Merc', disabled: true }, { value: 'BMW', label: 'BMW' }, { value: 'AUDI', label: 'Audi' }]
    }];

    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_DropDownGroup2.default, { handleToggle: actions.onClick,
      onChange: actions.onChange, onFocus: actions.onFocus,
      groups: dropdownItems
    }));

    it('should toggle open/close when clicked', function () {
      var dropdownBtn = wrapper.find('.btn');
      (0, _chai.expect)(wrapper.find('.dropdown__options')).to.not.have.className('is-open');
      dropdownBtn.simulate('click');
      (0, _chai.expect)(wrapper.find('.dropdown__options')).to.have.className('is-open');
      dropdownBtn.simulate('click');
      (0, _chai.expect)(wrapper.find('.dropdown__options')).to.not.have.className('is-open');
    });

    it('should list options passed through to it', function () {
      var listOptions = wrapper.find('.dropdown__options');
      (0, _chai.expect)(listOptions.children()).to.have.length(dropdownItems.length + 1);
      (0, _chai.expect)(listOptions.childAt(0)).to.have.className('dropdown__options__option');
      (0, _chai.expect)(listOptions.childAt(0)).to.have.text('--');

      var currentGroup = listOptions.childAt(1);
      (0, _chai.expect)(currentGroup.children()).to.have.length(dropdownItems[0].items.length + 1);
      var currentGroupOption = currentGroup.childAt(0);
      (0, _chai.expect)(currentGroupOption).to.have.className('dropdown__options__group');
      (0, _chai.expect)(currentGroupOption).to.have.text('Currency');
      currentGroupOption = currentGroup.childAt(1).find('.dropdown__options__option');
      (0, _chai.expect)(currentGroupOption).to.have.className('is-disabled');
      (0, _chai.expect)(currentGroupOption).to.have.text('Pounds');

      currentGroup = listOptions.childAt(3);
      (0, _chai.expect)(currentGroup.children()).to.have.length(dropdownItems[2].items.length + 1);
      currentGroupOption = currentGroup.childAt(0);
      (0, _chai.expect)(currentGroupOption).to.have.className('dropdown__options__group');
      (0, _chai.expect)(currentGroupOption).to.have.text('Cars');
      currentGroupOption = currentGroup.childAt(2).find('.dropdown__options__option');
      (0, _chai.expect)(currentGroupOption).to.not.have.className('is-disabled');
      (0, _chai.expect)(currentGroupOption).to.have.text('BMW');
    });
  });
});