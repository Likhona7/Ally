(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'chai', 'enzyme', 'chai-enzyme', './Loading'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('chai'), require('enzyme'), require('chai-enzyme'), require('./Loading'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.chai, global.enzyme, global.chaiEnzyme, global.Loading);
    global.LoadingTest = mod.exports;
  }
})(this, function (_react, _chai, _enzyme, _chaiEnzyme, _Loading) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _chai2 = _interopRequireDefault(_chai);

  var _chaiEnzyme2 = _interopRequireDefault(_chaiEnzyme);

  var _Loading2 = _interopRequireDefault(_Loading);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  _chai2.default.use((0, _chaiEnzyme2.default)());

  describe('Loading component', function () {
    it('create default', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loading2.default, null));
      (0, _chai.expect)(wrapper.find('.loading-spinner')).to.be.present();
    });

    it('create small', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loading2.default, { size: _Loading.LOADING_SMALL }));
      (0, _chai.expect)(wrapper.find('.loading-spinner--small')).to.be.present();
    });

    it('create large', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loading2.default, { size: _Loading.LOADING_LARGE }));
      (0, _chai.expect)(wrapper.find('.loading-spinner--large')).to.be.present();
    });
  });
});