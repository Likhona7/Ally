(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', '@agct/reacceptance/src/qa'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('@agct/reacceptance/src/qa'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.qa);
    global.Pagination = mod.exports;
  }
})(this, function (exports, _react, _qa) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Pagination = function (_React$Component) {
    _inherits(Pagination, _React$Component);

    function Pagination(props) {
      _classCallCheck(this, Pagination);

      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Pagination).call(this, props));

      _this.state = _extends({}, props);
      return _this;
    }

    _createClass(Pagination, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this.setState(_extends({}, nextProps));
      }
    }, {
      key: 'changePage',
      value: function changePage(page) {
        this.setState({ activePage: page });
        this.state.onChange(page);
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var startPointCalc = function startPointCalc(active, total) {
          if (active === 1) return active;
          if (active === total) return total - 2;
          return active - 1;
        };

        var startPoint = startPointCalc(this.state.activePage, this.state.pageCount);

        var paginationHidden = !this.state.activePage || !this.state.pageCount || this.state.pageCount === 1;
        var previousSpreadHidden = this.state.activePage <= 2 || this.state.pageCount <= 3;
        var nextSpreadHidden = this.state.pageCount - this.state.activePage < 2 || this.state.pageCount <= 3;

        var visiblePages = Array(3).fill().map(function (x, i) {
          return startPoint + i;
        }).filter(function (x) {
          return x >= 1 && x <= _this2.state.pageCount;
        });

        return _react2.default.createElement(
          'div',
          { className: 'pagination-wrap' },
          !paginationHidden && _react2.default.createElement(
            'ul',
            { className: 'pagination' },
            _react2.default.createElement(
              'li',
              _extends({ className: 'pagination__item' }, (0, _qa.attr)('pagination-first')),
              this.state.activePage === 1 && _react2.default.createElement(
                'span',
                null,
                'First'
              ),
              this.state.activePage > 1 && _react2.default.createElement(
                'a',
                { onClick: function onClick() {
                    return _this2.changePage(1);
                  } },
                'First'
              )
            ),
            !previousSpreadHidden && _react2.default.createElement(
              'li',
              _extends({ className: 'pagination__item' }, (0, _qa.attr)('pagination-spread--previous')),
              '…'
            ),
            visiblePages.map(function (x) {
              return _react2.default.createElement(
                'li',
                _extends({ className: 'pagination__item' }, (0, _qa.attr)('pagination-page'), { key: x }),
                _this2.state.activePage === x && _react2.default.createElement(
                  'span',
                  null,
                  x
                ),
                _this2.state.activePage !== x && _react2.default.createElement(
                  'a',
                  { onClick: function onClick() {
                      return _this2.changePage(x);
                    } },
                  x
                )
              );
            }),
            !nextSpreadHidden && _react2.default.createElement(
              'li',
              _extends({ className: 'pagination__item' }, (0, _qa.attr)('pagination-spread--next')),
              '…'
            ),
            _react2.default.createElement(
              'li',
              _extends({ className: 'pagination__item' }, (0, _qa.attr)('pagination-last')),
              this.state.activePage === this.state.pageCount && _react2.default.createElement(
                'span',
                null,
                'Last'
              ),
              this.state.activePage < this.state.pageCount && _react2.default.createElement(
                'a',
                { onClick: function onClick() {
                    return _this2.changePage(_this2.state.pageCount);
                  } },
                'Last'
              )
            )
          )
        );
      }
    }]);

    return Pagination;
  }(_react2.default.Component);

  Pagination.propTypes = {
    pageCount: _react.PropTypes.number.isRequired,
    activePage: _react.PropTypes.number,
    onChange: _react.PropTypes.func
  };

  Pagination.defaultProps = {
    activePage: 1,
    onChange: function onChange() {}
  };

  exports.default = Pagination;
});