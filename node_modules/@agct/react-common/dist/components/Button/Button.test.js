(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'chai', 'enzyme', 'chai-enzyme', './Button'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('chai'), require('enzyme'), require('chai-enzyme'), require('./Button'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.chai, global.enzyme, global.chaiEnzyme, global.Button);
    global.ButtonTest = mod.exports;
  }
})(this, function (_react, _chai, _enzyme, _chaiEnzyme, _Button) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _chai2 = _interopRequireDefault(_chai);

  var _chaiEnzyme2 = _interopRequireDefault(_chaiEnzyme);

  var _Button2 = _interopRequireDefault(_Button);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  _chai2.default.use((0, _chaiEnzyme2.default)());

  describe('Button component', function () {
    describe('disabled state', function () {
      it('is not disabled by default', function () {
        (0, _chai.expect)((0, _enzyme.mount)(_react2.default.createElement(_Button2.default, null)).find('.btn')).to.not.be.disabled();
      });

      it('can be passed in', function () {
        (0, _chai.expect)((0, _enzyme.mount)(_react2.default.createElement(_Button2.default, { isDisabled: true })).find('.btn')).to.be.disabled();
        (0, _chai.expect)((0, _enzyme.mount)(_react2.default.createElement(_Button2.default, { isDisabled: false })).find('.btn')).to.not.be.disabled();
      });
    });

    describe('children', function () {
      it('has no children by default', function () {
        (0, _chai.expect)((0, _enzyme.mount)(_react2.default.createElement(_Button2.default, null)).prop('children')).to.be.undefined;
      });

      it('can be passed in', function () {
        var child = 'this is a child';
        var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Button2.default, { children: child }));
        (0, _chai.expect)(wrapper.find('.btn').text()).to.equal(child);
      });
    });

    describe('className', function () {
      it('is btn by default', function () {
        var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Button2.default, null));
        (0, _chai.expect)(wrapper.find('button').props().className).to.equal('btn');
      });

      it('can be passed in', function () {
        var className = 'btn btn--primary';
        var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Button2.default, { className: className }));
        (0, _chai.expect)(wrapper.find('button').props().className).to.equal(className);
      });
    });

    describe('actions', function () {
      var sandbox = sinon.sandbox.create();
      var actions = {
        onClick: function onClick() {}
      };

      afterEach(function () {
        sandbox.restore();
      });

      it('performs function on click', function () {
        var spyClick = sandbox.spy(actions, 'onClick');
        var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Button2.default, { onClick: actions.onClick })).find('.btn');
        wrapper.simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;
      });

      it('does not perform function if disabled', function () {
        var spyClick = sandbox.spy(actions, 'onClick');
        var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Button2.default, { isDisabled: true, onClick: actions.onClick })).find('.btn');
        wrapper.simulate('click');
        (0, _chai.expect)(spyClick).to.not.have.been.called;
      });
    });
  });
});