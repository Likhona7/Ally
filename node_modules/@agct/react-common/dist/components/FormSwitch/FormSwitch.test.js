(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'chai', 'enzyme', 'chai-enzyme', 'sinon-chai', 'components/FormSwitch/FormSwitch'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('chai'), require('enzyme'), require('chai-enzyme'), require('sinon-chai'), require('components/FormSwitch/FormSwitch'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.chai, global.enzyme, global.chaiEnzyme, global.sinonChai, global.FormSwitch);
    global.FormSwitchTest = mod.exports;
  }
})(this, function (_react, _chai, _enzyme, _chaiEnzyme, _sinonChai, _FormSwitch) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _chai2 = _interopRequireDefault(_chai);

  var _chaiEnzyme2 = _interopRequireDefault(_chaiEnzyme);

  var _sinonChai2 = _interopRequireDefault(_sinonChai);

  var _FormSwitch2 = _interopRequireDefault(_FormSwitch);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  _chai2.default.use((0, _chaiEnzyme2.default)());
  _chai2.default.use(_sinonChai2.default);

  describe('FormSwitch component', function () {
    var props = {
      label: 'Switch',
      isDisabled: true,
      isChecked: true,
      onChange: function onChange() {}
    };

    it('renders label prop', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormSwitch2.default, { label: props.label }));
      (0, _chai.expect)(wrapper.find('.switch-wrap')).to.exist;
      (0, _chai.expect)(wrapper.find('.switch__label').text()).to.equal(props.label);
    });

    it('renders isDisabled prop', function () {
      (0, _chai.expect)((0, _enzyme.shallow)(_react2.default.createElement(_FormSwitch2.default, { isDisabled: props.isDisabled })).find('input')).to.have.prop('disabled');
    });

    it('renders isChecked prop', function () {
      (0, _chai.expect)((0, _enzyme.shallow)(_react2.default.createElement(_FormSwitch2.default, { isChecked: props.isChecked })).find('input')).to.have.prop('checked');
    });

    describe('actions', function () {
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('performs function onChange', function () {
        var spyClick = sandbox.spy(props, 'onChange');
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormSwitch2.default, { label: props.label, onChange: props.onChange }));
        wrapper.find('input').simulate('change');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;
      });

      it('does not perform function onChange on disabled switch', function () {
        var spyClick = sandbox.spy(props, 'onChange');
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormSwitch2.default, { label: props.label, isDisabled: true, onChange: props.onChange }));
        wrapper.find('input').simulate('change');
        (0, _chai.expect)(spyClick).to.not.have.been.called;
      });
    });
  });
});