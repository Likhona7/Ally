(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'chai', 'enzyme', 'chai-enzyme', 'sinon-chai', './Datepicker', 'moment'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('chai'), require('enzyme'), require('chai-enzyme'), require('sinon-chai'), require('./Datepicker'), require('moment'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.chai, global.enzyme, global.chaiEnzyme, global.sinonChai, global.Datepicker, global.moment);
    global.DatepickerTest = mod.exports;
  }
})(this, function (_react, _chai, _enzyme, _chaiEnzyme, _sinonChai, _Datepicker, _moment) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _chai2 = _interopRequireDefault(_chai);

  var _chaiEnzyme2 = _interopRequireDefault(_chaiEnzyme);

  var _sinonChai2 = _interopRequireDefault(_sinonChai);

  var _Datepicker2 = _interopRequireDefault(_Datepicker);

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  _chai2.default.use((0, _chaiEnzyme2.default)());
  _chai2.default.use(_sinonChai2.default);

  describe('Datepicker component', function () {
    describe('Toggles display', function () {
      it('does not display by default', function () {
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, null));
        (0, _chai.expect)(wrapper.find('.datepicker')).to.not.exist;
      });

      it('does not display if disabled', function () {
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isDisabled: true }));
        var sandbox = sinon.sandbox.create();
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'showDatepicker');
        wrapper.find('.qa-datepicker-toggle').simulate('click');
        (0, _chai.expect)(spyClick).to.have.not.been.called;
        (0, _chai.expect)(wrapper.find('.datepicker')).to.not.exist;
        sandbox.restore();
      });

      it('displays on click of input button', function () {
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, null));
        var sandbox = sinon.sandbox.create();
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'showDatepicker');
        wrapper.find('.qa-datepicker-toggle').simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;
        (0, _chai.expect)(wrapper.find('.datepicker')).to.exist;
        sandbox.restore();
      });
    });

    describe('Current date is active', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true }));

      it('has today\'s date selected', function () {
        (0, _chai.expect)(wrapper.find('.datepicker__calendar__item--day.is-active')).to.exist;
      });
    });

    describe('Passing a date into the calendar', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2015-11-15'
      }));

      it('The correct date should reflect in the active date and title', function () {
        var expected = (0, _moment2.default)('2015-11-15').toString();

        var activeDate = wrapper.state('activeDate').toString();
        (0, _chai.expect)(activeDate).to.equal(expected);
      });
    });

    describe('Next and Previous buttons change active month', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2015-10-15'
      }));
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('click next link', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'navigate');
        wrapper.find('.datepicker__button--next').simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;
        (0, _chai.expect)(spyClick).to.have.been.calledWith(1);
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('November 2015');
      });

      it('click previous link', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'navigate');
        wrapper.find('.datepicker__button--prev').simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;
        (0, _chai.expect)(spyClick).to.have.been.calledWith(-1);
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('October 2015');
      });
    });

    describe('Clicking a day changes active date', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2016-06-15'
      }));
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('click day 1 link', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectDay');
        var expected = (0, _moment2.default)('2016-06-02').toString();

        wrapper.find('.datepicker__calendar__item--day').at(3).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;

        var activeDate = wrapper.state('activeDate').toString();
        (0, _chai.expect)(activeDate).to.equal(expected);
      });
    });

    describe('Changing month user journey', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2016-01-01'
      }));
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('click title link', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'changeView');
        wrapper.find('.datepicker__title').simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledOnce;
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2016');
      });

      it('current month is active', function () {
        (0, _chai.expect)(wrapper.find('.datepicker__calendar__item--month.is-active').text()).to.equal('Jan');
      });

      it('renders 12 months', function () {
        (0, _chai.expect)(wrapper.find('.datepicker__calendar__item--month').length).to.equal(12);
      });

      it('Selects a month', function () {
        wrapper.find('.datepicker__calendar__item--month').at(3).simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('April 2016');
      });
    });

    describe('Selecting a new year journey', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2016-01-01'
      }));
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('click title link', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'changeView');
        wrapper.find('.datepicker__title').simulate('click').simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.calledTwice;
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2009-2020');
      });

      it('current year is active', function () {
        (0, _chai.expect)(wrapper.find('.datepicker__calendar__item--year.is-active').text()).to.equal('2016');
      });

      it('renders 12 years', function () {
        (0, _chai.expect)(wrapper.find('.datepicker__calendar__item--year').length).to.equal(12);
      });

      it('Selects a year', function () {
        wrapper.find('.datepicker__title').simulate('click').simulate('click');
        wrapper.find('.datepicker__calendar__item--year').at(3).simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2012');
      });

      it('selects a month', function () {
        wrapper.find('.datepicker__calendar__item--month').at(3).simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('April 2012');
      });
    });

    describe('Next and Previous buttons change active year', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2016-07-08'
      }));

      it('Changes active year to next year', function () {
        wrapper.find('.datepicker__title').simulate('click');
        wrapper.find('.datepicker__button--next').simulate('click');

        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2017');
      });

      it('Changes active year back to current year', function () {
        wrapper.find('.datepicker__button--prev').simulate('click');

        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2016');
      });

      it('Changes active year to previous year', function () {
        wrapper.find('.datepicker__button--prev').simulate('click');

        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2015');
      });
    });

    describe('Clicking next and previous on years changes year ranges', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, { isVisible: true,
        date: '2015-12-15'
      }));
      wrapper.find('.datepicker__title').simulate('click').simulate('click');

      it('should go to the previous year range', function () {
        wrapper.find('.datepicker__button--prev').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('1996-2007');
      });

      it('should got back to original year range', function () {
        wrapper.find('.datepicker__button--next').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2008-2019');
      });

      it('should got back to the next year range', function () {
        wrapper.find('.datepicker__button--next').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2020-2031');
      });
    });

    describe('Passing in max dates in all views', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, {
        date: '2015-06-10',
        maxDate: '2019-10-10'
      }));
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('should not be able to click next button in month view', function () {
        wrapper.find('.qa-datepicker-toggle').simulate('click');
        wrapper.find('.datepicker__title').simulate('click');
        wrapper.find('.datepicker__button--next').simulate('click').simulate('click').simulate('click').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2019');
        wrapper.find('.datepicker__button--next').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2019');
      });

      it('should not be able to click on month past max', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectMonth');
        wrapper.find('.datepicker__calendar__item--month').at(11).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.notCalled;
      });

      it('should not be able to click next button in day view', function () {
        wrapper.find('.datepicker__calendar__item--month').at(9).simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('October 2019');
        wrapper.find('.datepicker__button--next').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('October 2019');
      });

      it('should not be able to click on day past max', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectDay');
        wrapper.find('.datepicker__calendar__item--day').at(15).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.notCalled;
      });

      it('should not be able to click next button in years view', function () {
        wrapper.find('.datepicker__title').simulate('click').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2012-2023');
        wrapper.find('.datepicker__button--next').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2012-2023');
      });

      it('should not be able to click on year past max', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectYear');
        wrapper.find('.datepicker__calendar__item--month').at(11).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.notCalled;
      });
    });

    describe('Passing in min dates in all views', function () {
      var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Datepicker2.default, {
        date: '2015-06-10',
        minDate: '2014-05-10'
      }));
      var sandbox = sinon.sandbox.create();

      afterEach(function () {
        sandbox.restore();
      });

      it('should not be able to click prev button in month view', function () {
        wrapper.find('.qa-datepicker-toggle').simulate('click');
        wrapper.find('.datepicker__title').simulate('click');
        wrapper.find('.datepicker__button--prev').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2014');
        wrapper.find('.datepicker__button--prev').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2014');
      });

      it('should not be able to click on month past min', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectMonth');
        wrapper.find('.datepicker__calendar__item--month').at(0).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.notCalled;
      });

      it('should not be able to click prev button in day view', function () {
        wrapper.find('.datepicker__calendar__item--month').at(4).simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('May 2014');
        wrapper.find('.datepicker__button--prev').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('May 2014');
      });

      it('should not be able to click on day past min', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectDay');
        wrapper.find('.datepicker__calendar__item--day').at(1).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.notCalled;
      });

      it('should not be able to click prev button in years view', function () {
        wrapper.find('.datepicker__title').simulate('click').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2007-2018');
        wrapper.find('.datepicker__button--prev').simulate('click');
        (0, _chai.expect)(wrapper.find('.datepicker__title').text()).to.equal('2007-2018');
      });

      it('should not be able to click on year past min', function () {
        var spyClick = sandbox.spy(_Datepicker2.default.prototype, 'selectYear');
        wrapper.find('.datepicker__calendar__item--month').at(0).simulate('click');
        (0, _chai.expect)(spyClick).to.have.been.notCalled;
      });
    });
  });
});