(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', '../../utils/formatting/money'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('../../utils/formatting/money'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.money);
    global.MoneyDecorative = mod.exports;
  }
})(this, function (exports, _react, _money) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var DecorativeMoney = function DecorativeMoney(_ref) {
    var amount = _ref.amount;
    var currencyCode = _ref.currencyCode;
    var _ref$useSymbol = _ref.useSymbol;
    var useSymbol = _ref$useSymbol === undefined ? true : _ref$useSymbol;
    var _ref$invertNumber = _ref.invertNumber;
    var invertNumber = _ref$invertNumber === undefined ? false : _ref$invertNumber;

    var money = (0, _money.formatMoneyDestructured)(amount, currencyCode);
    var symbol = useSymbol ? money.symbol : money.isoCode;
    var isNegative = money.isNegative;

    var invertNegative = isNegative && invertNumber;
    var units = invertNegative ? money.units.replace('-', ' ') : money.units;

    return _react2.default.createElement(
      'span',
      { className: 'money' },
      invertNegative && _react2.default.createElement(
        'span',
        { className: 'money__prefix' },
        '-'
      ),
      _react2.default.createElement(
        'span',
        { className: 'money__symbol' },
        symbol
      ),
      _react2.default.createElement(
        'span',
        { className: 'money__units' },
        units
      ),
      money.cents && _react2.default.createElement(
        'span',
        { className: 'money__decimal' },
        money.decimal
      ),
      money.cents && _react2.default.createElement(
        'span',
        { className: 'money__cents' },
        money.cents
      )
    );
  };

  DecorativeMoney.propTypes = {
    amount: _react.PropTypes.number.isRequired,
    currencyCode: _react.PropTypes.string.isRequired,
    useSymbol: _react.PropTypes.bool,
    invertNumber: _react.PropTypes.bool
  };

  exports.default = DecorativeMoney;
});