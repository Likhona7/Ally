(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['react', 'chai', 'enzyme', 'chai-enzyme', './Money'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('react'), require('chai'), require('enzyme'), require('chai-enzyme'), require('./Money'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.chai, global.enzyme, global.chaiEnzyme, global.Money);
    global.MoneyTest = mod.exports;
  }
})(this, function (_react, _chai, _enzyme, _chaiEnzyme, _Money) {
  'use strict';

  var _react2 = _interopRequireDefault(_react);

  var _chai2 = _interopRequireDefault(_chai);

  var _chaiEnzyme2 = _interopRequireDefault(_chaiEnzyme);

  var _Money2 = _interopRequireDefault(_Money);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  _chai2.default.use((0, _chaiEnzyme2.default)());

  var amount = 1234.5678;
  var currencyCode = 'ZAR';

  describe('Money component', function () {
    it('renders correct amount and symbol', function () {
      var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Money2.default, { amount: amount, currencyCode: currencyCode, useSymbol: false }));
      (0, _chai.expect)(wrapper).to.have.className('money');
      (0, _chai.expect)(wrapper.text()).to.equal('ZAR 1 234.57');

      wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Money2.default, { amount: amount, currencyCode: currencyCode }));
      (0, _chai.expect)(wrapper.text()).to.equal('R 1 234.57');
    });

    it('should have prop types defined', function () {
      (0, _chai.expect)(_Money2.default.propTypes.amount).to.equal(_react.PropTypes.number.isRequired);
      (0, _chai.expect)(_Money2.default.propTypes.currencyCode).to.equal(_react.PropTypes.string.isRequired);
      (0, _chai.expect)(_Money2.default.propTypes.useSymbol).to.equal(_react.PropTypes.bool);
    });

    it('has default props', function () {
      (0, _chai.expect)(_Money2.default.defaultProps).to.deep.equal({
        useSymbol: true
      });
    });
  });
});