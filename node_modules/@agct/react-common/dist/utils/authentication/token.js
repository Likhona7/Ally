(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'jwt-decode', 'query-string', 'escape-string-regexp'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('jwt-decode'), require('query-string'), require('escape-string-regexp'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.jwtDecode, global.queryString, global.escapeStringRegexp);
    global.token = mod.exports;
  }
})(this, function (exports, _jwtDecode, _queryString, _escapeStringRegexp) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.extractUsername = exports.extractEmail = exports.initializeToken = undefined;

  var _jwtDecode2 = _interopRequireDefault(_jwtDecode);

  var _queryString2 = _interopRequireDefault(_queryString);

  var _escapeStringRegexp2 = _interopRequireDefault(_escapeStringRegexp);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var pathPrefix = '/token/';
  var pathBlackListRegExps = [
  /* prevent redirect loop */
  '/login', '/logout', '/token'].map(function (x) {
    return new RegExp('^' + (0, _escapeStringRegexp2.default)(x));
  });

  var safePath = function safePath(path) {
    if (path) {
      var isBlacklisted = pathBlackListRegExps.reduce(function (prev, re) {
        return re.test(path) || prev;
      }, false);

      if (!isBlacklisted) {
        return path;
      }
    }
    return '/';
  };

  /* eslint-disable consistent-return */
  var initializeToken = exports.initializeToken = function initializeToken() {
    var pathname = window.location.pathname;

    if (pathname.substring(0, pathPrefix.length) === pathPrefix) {
      var token = pathname.substring(pathPrefix.length);
      try {
        (0, _jwtDecode2.default)(token);
      } catch (e) {
        // destroy app
        window.location = window.location.origin + '/logout';
        return;
      }

      // window.AUTH_TOKEN = token;
      var params = Object.assign({}, { redirect_url: '/' }, _queryString2.default.parse(location.search));
      var nextPath = safePath(params.redirect_url);

      return { token: token, nextPath: nextPath };
    }

    return;
  };

  /* eslint-disable consistent-return */
  var extractEmail = exports.extractEmail = function extractEmail(token) {
    if (!token) return;
    try {
      var data = (0, _jwtDecode2.default)(token);
      return data.email;
    } catch (e) {
      return;
    }
  };

  /* eslint-disable consistent-return */
  var extractUsername = exports.extractUsername = function extractUsername(token) {
    if (!token) return;
    try {
      var data = (0, _jwtDecode2.default)(token);
      return data.unique_name;
    } catch (e) {
      return;
    }
  };
});