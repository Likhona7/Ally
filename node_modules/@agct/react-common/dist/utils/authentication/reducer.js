(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', './actions'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('./actions'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.actions);
    global.reducer = mod.exports;
  }
})(this, function (exports, _actions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var initialState = {
    token: null
  };

  var session = function session() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
    var action = arguments[1];

    switch (action.type) {
      case _actions.SET_TOKEN:
        return _extends({}, state, {
          token: action.token
        });

      case _actions.CLEAR_TOKEN:
        return _extends({}, state, {
          token: null
        });

      default:
        return state;
    }
  };

  exports.default = session;
});