(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['chai', './numbers'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('chai'), require('./numbers'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.chai, global.numbers);
    global.numbersTest = mod.exports;
  }
})(this, function (_chai, _numbers) {
  'use strict';

  describe('formatNumber', function () {
    it('with thousand seperator ', function () {
      (0, _chai.expect)((0, _numbers.formatNumber)(90123745492)).to.be.equal('90 123 745 492');
    });

    it('with negative number ', function () {
      (0, _chai.expect)((0, _numbers.formatNumber)(-7482973)).to.be.equal('-7 482 973');
    });

    it('rounds .5 up to whole number', function () {
      (0, _chai.expect)((0, _numbers.formatNumber)(742.5)).to.be.equal('743');
    });

    it('rounds .499 down to whole number', function () {
      (0, _chai.expect)((0, _numbers.formatNumber)(947.499)).to.be.equal('947');
    });
  });

  describe('formatDecimal', function () {
    it('with thousand seperator ', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(10123745.49)).to.be.equal('10 123 745.49');
    });

    it('with negative number ', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(-7482973.32)).to.be.equal('-7 482 973.32');
    });

    it('with zero number ', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(0)).to.be.equal('0.00');
    });

    it('adds two decimal points to whole numbers ', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(87478)).to.be.equal('87 478.00');
    });

    it('to two decimal points', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(99.1234567)).to.be.equal('99.12');
    });

    it('does not round .004999 up', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(99.004999)).to.be.equal('99.00');
    });

    it('rounds .005 up', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(99.005)).to.be.equal('99.01');
    });

    it('rounds .995 up to wholde number', function () {
      (0, _chai.expect)((0, _numbers.formatDecimal)(99.995)).to.be.equal('100.00');
    });
  });
});