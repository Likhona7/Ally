(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'lodash', './actions'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('lodash'), require('./actions'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.lodash, global.actions);
    global.reducer = mod.exports;
  }
})(this, function (exports, _lodash, _actions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _lodash2 = _interopRequireDefault(_lodash);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var initialState = {
    agEnv: null,
    appName: null,
    bff: {
      baseURL: null,
      apiPath: '/bff/v1'
    },
    featureFlags: {}
  };
  // import merge from 'lodash/object/merge';


  var enviroment = function enviroment() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
    var action = arguments[1];

    switch (action.type) {
      case _actions.SET_ENVIRONMENT:
        return _lodash2.default.merge({}, state, action.payload);

      default:
        return state;
    }
  };

  exports.default = enviroment;
});