import React from 'react';
import chai, { expect } from 'chai';
import { shallow } from 'enzyme';
import chaiEnzyme from 'chai-enzyme';

import TabsMenuSliderArrows from './TabsMenuSliderArrows';

chai.use(chaiEnzyme());


const props = {
  tabsLength: 10,
  activePage: 0,
  tabsPerPage: 5,
  displayArrows: true,
  prevPage: () => {},
  nextPage: () => {},
};

const wrapperDisplayArrows = shallow(
  <TabsMenuSliderArrows
    tabsLength={props.tabsLength}
    activePage={props.activePage}
    tabsPerPage={props.tabsPerPage}
    displayArrows={props.tabsPerPage}
    prevPage={props.prevPage}
    nextPage={props.nextPage}
  />
);

const wrapperNoArrows = shallow(
  <TabsMenuSliderArrows
    tabsLength={props.tabsLength}
    activePage={props.activePage}
    tabsPerPage={props.tabsPerPage}
    displayArrows={!props.tabsPerPage}
    prevPage={props.prevPage}
    nextPage={props.nextPage}
  />
);

describe('TabsMenuSliderArrows component', () => {
  it('renders arrows if displayArrows is true', () => {
    expect(wrapperDisplayArrows.find('.tabs-slider__arrows')).to.exist;
  });

  it('does not render arrows if displayArrows is false', () => {
    expect(wrapperNoArrows.find('.tabs-slider__arrows')).to.not.exist;
  });
});
