import React from 'react';
import chai, { expect } from 'chai';
import { shallow } from 'enzyme';
import chaiEnzyme from 'chai-enzyme';
import sinonChai from 'sinon-chai';

chai.use(chaiEnzyme());
chai.use(sinonChai);

import FeedbackLink from './FeedbackLink';

const userAgent = 'Chrome/53.0.2785.143';
const appName = 'Test App';
const username = 'testuser';
const preventDefaultEvent = { preventDefault() {} };
const date = new Date();
const url = 'http://allangray.co.za';
const emailLink = `mailto:icebreakersfeedback@allangray.co.za?Subject=[Test App Feedback]
    &body=%0A-------------------------------------------------------%0AYour feedback is greatly appreciated.%0AIf you are experiencing a problem or have a suggestion, please be as specific as possible and include a screenshot where necessary.%0A%0ATechnical Data:%0Auser-agent: Chrome/53.0.2785.143 url: ${url} screen-resolution: 0x0 username: testuser timestamp: ${date}`;

describe('FeedbackLink component', () => {
  let wrapper;

  beforeEach(() => {
    wrapper = shallow(<FeedbackLink app={appName} username={username} userAgent={userAgent} date={date} url={url} />);
  });

  it('renders correctly', () => {
    expect(wrapper).to.have.className('nav-bar__items__item');
    expect(wrapper).to.have.text('Send us your Feedback');
  });

  it('prevent default click event when clicked', () => {
    const sandbox = sinon.sandbox.create();
    const spyClick = sandbox.spy(preventDefaultEvent, 'preventDefault');

    wrapper.simulate('click', preventDefaultEvent);
    expect(spyClick).to.have.been.calledOnce;
    sandbox.restore();
  });

  it('opens new window when clicked', () => {
    const sandbox = sinon.sandbox.create();
    const spyClick = sandbox.spy(window, 'open');

    wrapper.simulate('click', preventDefaultEvent);
    expect(spyClick).to.have.been.calledWith(emailLink, 'emailWindow');
    sandbox.restore();
  });
});
