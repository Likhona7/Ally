import React, { Component, PropTypes } from 'react';
import classnames from 'classnames';

class Accordion extends Component {
  constructor(props) {
    super(props);

    this.state = {
      ...props,
    };
  }

  componentDidMount() {
    this.state.height = this.animation.scrollHeight;
  }

  componentWillReceiveProps(props) {
    this.setState({
      ...props,
    });
  }

  shouldComponentUpdate(nextProps) {
    return nextProps.isOpen !== this.state.isOpen;
  }


  render() {
    const { isOpen, className } = this.state;
    const accordionClassName = classnames('accordion', {
      'is-open': isOpen,
      'is-closed': !isOpen,
      [className]: className,
    });

    return (
      <div className={accordionClassName} >
        <div className="accordion__header">
          {this.state.accordionHeaderTemplate}
        </div>
        <div className="accordion__body"
          style={{ height: isOpen ? this.state.height : 0 }}
          ref={acc => Object.assign(this, { animation: acc })}
        >
          {this.state.accordionBodyTemplate}
        </div>
      </div>
    );
  }
}

Accordion.propTypes = {
  accordionHeaderTemplate: PropTypes.any,
  accordionBodyTemplate: PropTypes.any,
  className: PropTypes.string,
  isOpen: PropTypes.bool,
};

Accordion.defaultProps = {
  className: '',
};

export default Accordion;
