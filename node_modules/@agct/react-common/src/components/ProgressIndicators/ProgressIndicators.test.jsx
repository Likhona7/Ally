import React from 'react';
import chai, { expect } from 'chai';
import { shallow, mount } from 'enzyme';
import chaiEnzyme from 'chai-enzyme';

import ProgressIndicators,
  { ProgressIndicatorsItem,
    SIZE_SMALL,
    SIZE_LARGE,
  } from 'components/ProgressIndicators/ProgressIndicators';

chai.use(chaiEnzyme());

describe('ProgressIndicators component', () => {
  const props = {
    title: 'step 1',
    description: 'step description',
  };

  it('renders small progressIndicators', () => {
    expect(shallow(<ProgressIndicators size={SIZE_SMALL} />).find('.progress--small')).to.exist;
  });

  it('renders large progressIndicators', () => {
    expect(shallow(<ProgressIndicators size={SIZE_LARGE} />).find('.progress--large')).to.exist;
  });

  it('renders children', () => {
    const wrapper = mount(
      <ProgressIndicators
        children={<ProgressIndicatorsItem title={props.title} description={props.description} /> }
      />
    );
    expect(wrapper.find('.progress__item')).to.exist;
    expect(wrapper.find('.progress__title').text()).to.equal(props.title);
    expect(wrapper.find('.progress__description').text()).to.equal(props.description);
  });

  it('renders completed item', () => {
    const wrapper = mount(
      <ProgressIndicators
        children={<ProgressIndicatorsItem title={props.title} description={props.description} isComplete /> }
      />
    );

    expect(wrapper.find('.progress__step.is-complete')).to.exist;
    expect(wrapper.find('.agi-tick')).to.exist;
  });

  it('renders active item', () => {
    const wrapper = mount(
      <ProgressIndicators
        children={<ProgressIndicatorsItem title={props.title} description={props.description} isActive /> }
      />
    );

    expect(wrapper.find('.progress__step.is-active')).to.exist;
  });
});
