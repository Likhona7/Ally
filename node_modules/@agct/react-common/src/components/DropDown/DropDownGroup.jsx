import React, { Component, PropTypes } from 'react';
import _ from 'lodash';
import classNames from 'classnames';
import uiWrapper from '../UIWrapper/UIWrapper';
import { buildBlankOption, buildGroupOptions } from './DropDownUtils';
import { attr as qa } from '@agct/reacceptance/src/qa';


class DropDown extends Component {
  constructor(props) {
    super(props);

    this.handleToggle = this.handleToggle.bind(this);
    this.handleSelect = this.handleSelect.bind(this);
  }

  handleToggle(evt) {
    evt.preventDefault();

    this.props.onFocus();
    this.props.ui.toggle();
  }

  handleSelect(item) {
    const value = item.value || item || null;

    this.props.onChange(value);
    this.props.ui.close();
  }

  render() {
    const selectedItem = this.props.value
      ? _.chain(this.props.groups)
        .flatMap('items')
        .find({ value: this.props.value })
        .value()
      : null;

    const prompt = selectedItem ? selectedItem.label : this.props.prompt;

    const blankOption = this.props.withBlank && buildBlankOption(this.handleSelect);
    const groupOptions = this.props.groups && buildGroupOptions(this.props.groups, selectedItem, this.handleSelect);

    const optionsCssClasses = classNames('dropdown__options', {
      'is-open': this.props.ui.isOpen,
    });

    return (
      <div className="dropdown">
        <button
          className="btn dropdown__toggle"
          onClick={this.handleToggle}
          {...qa('dropdown')}
        >
          <span className="dropdown__title">
            {prompt}
          </span>
          <i className="agi agi-chevron-down-fat"></i>
        </button>

        <div className={optionsCssClasses}>
          {blankOption}
          {groupOptions}
        </div>
      </div>
    );
  }
}


DropDown.propTypes = {
  prompt: PropTypes.string,
  withBlank: PropTypes.bool,
  groups: PropTypes.array,

  /*
    // Example of `groups` property:
    [
      {
        label: 'Currency',
        items: [
          { value: 'GBP', label: 'Pounds', disabled: true },
          { value: 'USD', label: 'Dollars' },
          { value: 'EUR', label: 'Euro' },
        ],
      },
      {
        label: 'Colours',
        items: [
          { value: 'RED', label: 'red', disabled: true },
          { value: 'GREEN', label: 'green' },
          { value: 'BLUE', label: 'blue' },
        ],
      },
      {
        label: 'Cars',
        items: [
          { value: 'MERC', label: 'Merc', disabled: true },
          { value: 'BMW', label: 'BMW' },
          { value: 'AUDI', label: 'Audi' },
        ],
      },
    ]
  */


  /* reduxForm */
  value: PropTypes.string,
  initialValue: PropTypes.string,
  onChange: PropTypes.func.isRequired,
  onFocus: PropTypes.func.isRequired,

  /* uiWrapper */
  ui: PropTypes.object.isRequired,
};

DropDown.defaultProps = {
  prompt: 'Please select a value',
  withBlank: true,
};


export default uiWrapper(DropDown);
