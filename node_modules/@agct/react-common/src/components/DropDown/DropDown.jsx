import React, { Component, PropTypes } from 'react';
import _ from 'lodash';
import classNames from 'classnames';
import uiWrapper from '../UIWrapper/UIWrapper';
import { buildBlankOption, buildOptions } from './DropDownUtils';
import { attr as qa } from '@agct/reacceptance/src/qa';

const getPrompt = (prompt, selectedItem, upper) => {
  const promptText = selectedItem ? selectedItem.label : prompt;
  return upper ? promptText.toUpperCase() : promptText;
};

class DropDown extends Component {
  constructor(props) {
    super(props);

    this.handleToggle = this.handleToggle.bind(this);
    this.handleSelect = this.handleSelect.bind(this);
  }

  handleToggle(evt) {
    evt.preventDefault();

    if (!this.props.isDisabled) {
      this.props.onFocus();
      this.props.ui.toggle();
    }
  }

  handleSelect(item) {
    const value = item.value || item || null;
    this.props.onChange(value, item);
    this.props.ui.close();
  }

  render() {
    const selectedItem = (this.props.value) ? _.find(this.props.items, i => i.value === this.props.value) : null;
    const blankOption = this.props.withBlank && buildBlankOption(this.handleSelect);
    const flatOptions = this.props.items && buildOptions(this.props.items, selectedItem, this.handleSelect);

    const toggleCssClasses = classNames('btn dropdown__toggle', {
      'is-disabled': this.props.isDisabled,
    });
    const optionsCssClasses = classNames('dropdown__options', {
      'is-open': this.props.ui.isOpen,
    });

    const prompt = getPrompt(this.props.prompt, selectedItem,
      this.props.promptUpperCase);

    return (
      <div className="dropdown" {...qa('dropdown')}>
        <div className={toggleCssClasses} onClick={(evt) => !this.props.isDisabled && this.handleToggle(evt)}>
          <span className="dropdown__title">
            {prompt}
          </span>
          <i className="agi agi-chevron-down-fat"></i>
        </div>

        <div className={optionsCssClasses}>
          {blankOption}
          {flatOptions}
        </div>
      </div>
    );
  }
}


DropDown.propTypes = {
  prompt: PropTypes.string,
  promptUpperCase: PropTypes.bool,
  withBlank: PropTypes.bool,
  isDisabled: PropTypes.bool,
  items: PropTypes.array,
  /*
    // Example of `items` array property:
    [
      { value: 'GBP', label: 'Pounds', disabled: true },
      { value: 'USD', label: 'Dollars' },
      { value: 'EUR', label: 'Euro' },
    ],
  */


  /* reduxForm */
  value: PropTypes.string,
  initialValue: PropTypes.string,
  onChange: PropTypes.func.isRequired,
  onFocus: PropTypes.func.isRequired,

  /* uiWrapper */
  ui: PropTypes.object.isRequired,
};

DropDown.defaultProps = {
  prompt: 'Please select a value',
  withBlank: true,
  isDisabled: false,
};


export default uiWrapper(DropDown);
