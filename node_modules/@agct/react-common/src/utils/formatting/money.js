import accounting from 'accounting';
import _ from 'lodash';


export const USD_ISO_CODE = 'USD';
export const GBP_ISO_CODE = 'GBP';
export const EUR_ISO_CODE = 'EUR';
export const JPY_ISO_CODE = 'JPY';
export const ZAR_ISO_CODE = 'ZAR';
export const AUD_ISO_CODE = 'AUD';
export const YEN_FLEX_CODE = 'YEN';   // special case

export const currencyISOCodesToUnicode = {
  [USD_ISO_CODE]: '$',
  [GBP_ISO_CODE]: '\u00A3',  // &pound;
  [EUR_ISO_CODE]: '\u20AC',  // &euro;
  [JPY_ISO_CODE]: '\u00A5',  // &yen;
  [ZAR_ISO_CODE]: 'R',
  [AUD_ISO_CODE]: 'A$',
};

export const defaultCurrencyOptions = {
  symbol: 'R',
  decimal: '.',
  thousand: ' ',
  precision: 2,
  format: {
    pos: '%s %v',
    neg: '%s-%v',
    zero: '%s %v',
  },
};

export const fixCurrencyCode = currencyCode => {
  if (YEN_FLEX_CODE === currencyCode) {
    return JPY_ISO_CODE;
  }
  return currencyCode;
};

export const formatMoney = (number, options = {}) => accounting.formatMoney(number, {
  ...defaultCurrencyOptions,
  ...options,
});

export const formatMoneyWithSymbol = (number, currencyCode, options = {}) => {
  const isoCode = fixCurrencyCode(currencyCode);
  const symbol = _.get(currencyISOCodesToUnicode, isoCode) || isoCode || defaultCurrencyOptions.symbol;

  return formatMoney(number, {
    symbol,
    ...options,
  });
};

export const formatMoneyWithCode = (number, currencyCode, options = {}) => {
  const isoCode = fixCurrencyCode(currencyCode);

  return formatMoney(number, {
    symbol: isoCode,
    ...options,
  });
};

export const formatMoneyDestructured = (number, currencyCode, options = {}) => {
  const money = formatMoney(number, {
    symbol: '',
    ...options,
  });

  const isoCode = fixCurrencyCode(currencyCode);
  const symbol = _.get(currencyISOCodesToUnicode, isoCode, isoCode);
  const { decimal } = { ...defaultCurrencyOptions, ...options };
  const [units, cents] = money.split(decimal);
  const isNegative = number < 0;

  return {
    isoCode,
    symbol,
    decimal,
    units,
    cents,
    isNegative,
  };
};
