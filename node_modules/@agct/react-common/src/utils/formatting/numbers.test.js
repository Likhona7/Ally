import { expect } from 'chai';

import {
  formatNumber,
  formatDecimal,
} from './numbers';


describe('formatNumber', () => {
  it('with thousand seperator ', () => {
    expect(formatNumber(90123745492)).to.be.equal('90 123 745 492');
  });

  it('with negative number ', () => {
    expect(formatNumber(-7482973)).to.be.equal('-7 482 973');
  });

  it('rounds .5 up to whole number', () => {
    expect(formatNumber(742.5)).to.be.equal('743');
  });

  it('rounds .499 down to whole number', () => {
    expect(formatNumber(947.499)).to.be.equal('947');
  });
});


describe('formatDecimal', () => {
  it('with thousand seperator ', () => {
    expect(formatDecimal(10123745.49)).to.be.equal('10 123 745.49');
  });

  it('with negative number ', () => {
    expect(formatDecimal(-7482973.32)).to.be.equal('-7 482 973.32');
  });

  it('with zero number ', () => {
    expect(formatDecimal(0)).to.be.equal('0.00');
  });

  it('adds two decimal points to whole numbers ', () => {
    expect(formatDecimal(87478)).to.be.equal('87 478.00');
  });

  it('to two decimal points', () => {
    expect(formatDecimal(99.1234567)).to.be.equal('99.12');
  });

  it('does not round .004999 up', () => {
    expect(formatDecimal(99.004999)).to.be.equal('99.00');
  });

  it('rounds .005 up', () => {
    expect(formatDecimal(99.005)).to.be.equal('99.01');
  });

  it('rounds .995 up to wholde number', () => {
    expect(formatDecimal(99.995)).to.be.equal('100.00');
  });
});
